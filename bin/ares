#!/usr/bin/env node --harmony
process.env.NODE_PATH = __dirname + '/../node_modules/'
const cmd = require('commander')
const chalk = require('chalk')
const fs = require('fs')
const spinner = require('ora')();
cmd
    .version('1.0.1')
    .option("-t, --template <number>", "指定模板编号")
cmd
    .usage('<command>')
cmd
    .command('build <path>')
cmd
    .command('init <name>')
    .description('选择模板 初始化项目')
    .alias("i")
    .action((name) => {
        require('../command/init')(name)
    })
cmd
    .command('plugin')
    .description('选择需要克隆的插件或者组件')
    .alias('p')
    .option("--path <path>", '指定路径')
    .option("--list")
    .action((e) => {
        let type = 'normal';
        let arg = null;
        if (e.list) {
            type = 'list'
        }
        if (e.path) {
            type = 'path',
            arg = e.path
        }
        require('../command/plugin')(type, arg)
    })
cmd
    .command('d2 <cmd> [arg]')
    .description("D2Admin相关的脚手架命令")
    .action((e,arg)=>{
        if(e=='add'){
            require('../command/D2/add')(arg)
        }
        if(e=='create'){
            console.log(e,arg)
        }
    })
cmd
    .command('*',"无效")
    .action(function (env) {
        console.log(chalk.red('无效命令'));
    });
cmd.parse(process.argv)
if (cmd.template != undefined) {
    console.log(chalk.blue(cmd.template))
}